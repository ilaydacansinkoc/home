{"version":3,"sources":["App.tsx","store/reducers/systemReducer.ts","store/rootReducer.ts","store/actions/actionTypes.ts","index.tsx"],"names":["Header","Layout","Content","Footer","Sider","App","useState","collapsed","setCollapsed","className","style","height","trigger","collapsible","theme","mode","defaultSelectedKeys","Item","key","type","background","padding","onClick","margin","minHeight","textAlign","marginTop","initialState","loggedIn","session","userName","combineReducers","systemReducer","state","action","payload","store","createStore","rootReducer","render","document","getElementById"],"mappings":"4QAMQA,G,qBAAmCC,IAAnCD,QAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MAuDlBC,MArDf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,KAGb,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAACL,EAAD,CACEM,MAAO,CAAEC,OAAQ,SACjBC,QAAS,KACTC,aAAW,EACXN,UAAWA,GACX,yBAAKE,UAAU,SACf,kBAAC,IAAD,CAAMK,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,MACrD,kBAAC,IAAKC,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMC,KAAK,SACX,wCAEF,kBAAC,IAAKF,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMC,KAAK,iBACX,wCAEF,kBAAC,IAAKF,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMC,KAAK,WACX,0CAIN,kBAAC,IAAD,KACE,kBAACnB,EAAD,CAAQU,MAAO,CAAEU,WAAY,OAAQC,QAAS,IAC5C,kBAAC,IAAD,CACEZ,UAAU,UACVU,KAAMZ,EAAY,cAAgB,YAClCe,QAAS,kBAAMd,GAAcD,OAGjC,kBAACL,EAAD,CACEQ,MAAO,CACLa,OAAQ,YACRF,QAAS,GACTD,WAAY,OACZI,UAAW,MALf,WASA,kBAACrB,EAAD,CAAQO,MAAO,CAAEe,UAAW,SAAUC,UAAW,UAAjD,gD,wBC9CJC,EAA4B,CAChCC,UAAU,EACVC,QAAS,GACTC,SAAU,ICNGC,kBAAgB,CAC7BC,cDQK,WAGS,IAFdC,EAEa,uDAFLN,EACRO,EACa,uCACb,OAAQA,EAAOf,MACb,IET0B,iBFUxB,OAAO,eACFc,EADL,GAEKC,EAAOC,SAGd,QACE,OAAOF,M,OGhBPG,EAAQC,YAAYC,GAE1BC,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.ecdcbb60.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport './styles/menu.css';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction App() {\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <div className='App'>\n      <Layout>\n        <Sider\n          style={{ height: '100vh' }}\n          trigger={null}\n          collapsible\n          collapsed={collapsed}>\n          <div className='logo' />\n          <Menu theme='dark' mode='inline' defaultSelectedKeys={['1']}>\n            <Menu.Item key='1'>\n              <Icon type='user' />\n              <span>nav 1</span>\n            </Menu.Item>\n            <Menu.Item key='2'>\n              <Icon type='video-camera' />\n              <span>nav 2</span>\n            </Menu.Item>\n            <Menu.Item key='3'>\n              <Icon type='upload' />\n              <span>nav 3</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <Icon\n              className='trigger'\n              type={collapsed ? 'menu-unfold' : 'menu-fold'}\n              onClick={() => setCollapsed(!collapsed)}\n            />\n          </Header>\n          <Content\n            style={{\n              margin: '24px 16px',\n              padding: 24,\n              background: '#fff',\n              minHeight: 280\n            }}>\n            Content\n          </Content>\n          <Footer style={{ textAlign: 'center', marginTop: '-25px' }}>\n            Ant Design Â©2020 Created by Cassolini\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  UPDATE_SESSION,\r\n  SystemState,\r\n  SystemActionTypes\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState: SystemState = {\r\n  loggedIn: false,\r\n  session: '',\r\n  userName: ''\r\n};\r\n\r\nexport function systemReducer(\r\n  state = initialState,\r\n  action: SystemActionTypes\r\n): SystemState {\r\n  switch (action.type) {\r\n    case UPDATE_SESSION: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { systemReducer } from './reducers/systemReducer';\r\n\r\nexport default combineReducers({\r\n  systemReducer\r\n});\r\n","// Describing the shape of the system's slice of state\r\nexport interface SystemState {\r\n  loggedIn: boolean;\r\n  session: string;\r\n  userName: string;\r\n}\r\n\r\n// Describing the different ACTION NAMES available\r\nexport const UPDATE_SESSION = 'UPDATE_SESSION';\r\n\r\ninterface UpdateSessionAction {\r\n  type: typeof UPDATE_SESSION;\r\n  payload: SystemState;\r\n}\r\n\r\nexport type SystemActionTypes = UpdateSessionAction;\r\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/rootReducer';\nimport { render } from 'react-dom';\n\nconst store = createStore(rootReducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}