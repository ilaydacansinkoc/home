{"version":3,"sources":["App.tsx","store/reducers/systemReducer.ts","store/rootReducer.ts","store/actions/actionTypes.ts","index.tsx"],"names":["Header","Content","Footer","Sider","App","className","width","style","height","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","type","theme","mode","defaultSelectedKeys","Item","key","background","padding","lineHeight","textAlign","paddingRight","margin","minHeight","initialState","loggedIn","session","userName","combineReducers","systemReducer","state","action","payload","store","createStore","rootReducer","render","document","getElementById"],"mappings":"sMAMQA,G,uBAAAA,QAAQC,E,IAAAA,QAASC,E,IAAAA,OAAQC,E,IAAAA,MAmElBC,MAjEf,WACE,OACE,yBAAKC,UAAU,OACb,2BACE,kBAACF,EAAD,CACEG,MAAM,QACNC,MAAO,CAAEC,OAAQ,SACjBC,WAAW,KACXC,eAAe,IACfC,aAAc,SAAAC,GACZC,QAAQC,IAAIF,IAEdG,WAAY,SAACC,EAAWC,GACtBJ,QAAQC,IAAIE,EAAWC,KAEzB,yBAAKZ,UAAU,SACf,uBAAMa,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,MACrD,sBAAMC,KAAN,CAAWC,IAAI,KACb,uBAAML,KAAK,SACX,0BAAMZ,UAAU,YAAhB,6BAEF,sBAAMgB,KAAN,CAAWC,IAAI,KACb,uBAAML,KAAK,iBACX,0BAAMZ,UAAU,YAAhB,UAEF,sBAAMgB,KAAN,CAAWC,IAAI,KACb,uBAAML,KAAK,WACX,0BAAMZ,UAAU,YAAhB,UAEF,sBAAMgB,KAAN,CAAWC,IAAI,KACb,uBAAML,KAAK,SACX,0BAAMZ,UAAU,YAAhB,YAIN,2BACE,kBAACL,EAAD,CAAQO,MAAO,CAAEgB,WAAY,OAAQC,QAAS,IAC5C,uBACEN,MAAM,QACNC,KAAK,aACLC,oBAAqB,CAAC,KACtBb,MAAO,CACLkB,WAAY,OACZC,UAAW,QACXC,aAAc,SAEhB,sBAAMN,KAAN,CAAWC,IAAI,KAAf,SACA,sBAAMD,KAAN,CAAWC,IAAI,KAAf,SACA,sBAAMD,KAAN,CAAWC,IAAI,KAAf,WAGJ,kBAACrB,EAAD,CAASM,MAAO,CAAEqB,OAAQ,gBACxB,yBAAKrB,MAAO,CAAEiB,QAAS,GAAID,WAAY,OAAQM,UAAW,MAA1D,YAIF,kBAAC3B,EAAD,CAAQK,MAAO,CAAEmB,UAAW,WAA5B,8C,wBC1DJI,EAA4B,CAChCC,UAAU,EACVC,QAAS,GACTC,SAAU,ICNGC,kBAAgB,CAC7BC,cDQK,WAGS,IAFdC,EAEa,uDAFLN,EACRO,EACa,uCACb,OAAQA,EAAOpB,MACb,IET0B,iBFUxB,OAAO,eACFmB,EADL,GAEKC,EAAOC,SAGd,QACE,OAAOF,M,OGhBPG,EAAQC,YAAYC,GAE1BC,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,U","file":"static/js/main.7e6ecd45.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport './styles/menu.css';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Layout>\n        <Sider\n          width='250px'\n          style={{ height: '100vh' }}\n          breakpoint='lg'\n          collapsedWidth='0'\n          onBreakpoint={broken => {\n            console.log(broken);\n          }}\n          onCollapse={(collapsed, type) => {\n            console.log(collapsed, type);\n          }}>\n          <div className='logo' />\n          <Menu theme='dark' mode='inline' defaultSelectedKeys={['4']}>\n            <Menu.Item key='1'>\n              <Icon type='user' />\n              <span className='nav-text'>nav aaaaaaaaaaaaaaaaaaa1</span>\n            </Menu.Item>\n            <Menu.Item key='2'>\n              <Icon type='video-camera' />\n              <span className='nav-text'>nav 2</span>\n            </Menu.Item>\n            <Menu.Item key='3'>\n              <Icon type='upload' />\n              <span className='nav-text'>nav 3</span>\n            </Menu.Item>\n            <Menu.Item key='4'>\n              <Icon type='user' />\n              <span className='nav-text'>nav 4</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <Menu\n              theme='light'\n              mode='horizontal'\n              defaultSelectedKeys={['2']}\n              style={{\n                lineHeight: '64px',\n                textAlign: 'right',\n                paddingRight: '15px'\n              }}>\n              <Menu.Item key='1'>nav 1</Menu.Item>\n              <Menu.Item key='2'>nav 2</Menu.Item>\n              <Menu.Item key='3'>nav 3</Menu.Item>\n            </Menu>\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n              content\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            Ant Design Â©2018 Created by Ant UED\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  UPDATE_SESSION,\r\n  SystemState,\r\n  SystemActionTypes\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState: SystemState = {\r\n  loggedIn: false,\r\n  session: '',\r\n  userName: ''\r\n};\r\n\r\nexport function systemReducer(\r\n  state = initialState,\r\n  action: SystemActionTypes\r\n): SystemState {\r\n  switch (action.type) {\r\n    case UPDATE_SESSION: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { systemReducer } from './reducers/systemReducer';\r\n\r\nexport default combineReducers({\r\n  systemReducer\r\n});\r\n","// Describing the shape of the system's slice of state\r\nexport interface SystemState {\r\n  loggedIn: boolean;\r\n  session: string;\r\n  userName: string;\r\n}\r\n\r\n// Describing the different ACTION NAMES available\r\nexport const UPDATE_SESSION = 'UPDATE_SESSION';\r\n\r\ninterface UpdateSessionAction {\r\n  type: typeof UPDATE_SESSION;\r\n  payload: SystemState;\r\n}\r\n\r\nexport type SystemActionTypes = UpdateSessionAction;\r\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/rootReducer';\nimport { render } from 'react-dom';\n\nconst store = createStore(rootReducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}